[注: 重要な変更のみ記載しています]

0.9
---

プログラム：
-「ボンジャック」をサポートしました。

-「ザクソン」の背景が動くようになりましたが、少し遅いです。 (私の486/100で
  45-50fps)

-「スーパーコブラ」のオリジナルバージョンサポート。これに伴い、今までの海賊版を
  scobrabに改名しました。

- オリジナル「ムーンクレスタ」をサポート(ニチブツ版)。このROMはプロテクトされて
  いて、他のバージョンとも少し違います。このバージョンはChuck Cochems氏が覚えて
  いるもので多分間違いないです(エイリアンが自機の直前にワープする)。他のバージョ
  ン(海賊版からのコードとGremlinのオリジナルバージョンからのグラフィックを混ぜた
  ようなやつです)を「mooncrsb」に改名しました。

-「スペースインベーダー」が完全に動くようです。デラックス版はまだ完全ではありま
  せん。

- F12でgfxセット(F4で表示)のスナップショットを撮れます。

-「ドンキーコングJr.」での色の改善。 (Brad Oliver氏に感謝)

- Gary Walton氏のおかげで、「Moon Quasar」のDIPスイッチがメニューで正しく表示さ
  れるようになりました。

- F11キーでトグルできます。またF10キーで速度制限を切ることが出来ます(トグルも同
  様です)。

ソース：
- メモリ処理がタスクに頼らなくなったので、もっと汎用的にしないといけません。

　RAMが静的配列でなくなりました。RAMはメモリ空間を分割するreadroms()で動的に配置
  されます。これは、CPUのアドレススペースや、グラフィックROMなどのためです。その
  ため、コンバーション後のメモリから取り込み可能なグラフィックデータのように、実
  行時のデータは必要なくなりました。struct RomModuleとstruct GfxDecodeInfoの定義
  と使い方が変更になっています。struct RunningMachineはメモリ空間のポインタの配
  列を保持しています。
  RomModulesはマクロを使うように定義されるようにして、readroms()も同様にいくつか
  エラーチェックを行います。これで、アホなミスを犯すことが、劇的に減ると思います。

  この結果で、エミュレーションが以前よりかなり速くなったのはなぜかというのは質問
  しないで下さい!

- GameDriverストラクチャに、新しくrom_decode関数のポインタを追加しました。これは
  ROMのロード後に全体を解読するために使用します。CPUのopcodeのみを解析に使う
  opcode_decodeの逆です。また、opcode_decodeの扱いが変りました。CPUがopcodeを読
  み込むとき、ランタイムに呼び出す代わりに、別な64kのメモリを割り当て、ROM全体が
  解読されます。そのため、命令コードはこの新しい配列から持ってくることになります。
  このアプローチはあまり汎用性がありません。例えば、RAMが生成するコードを扱えま
  せん(「ペンゴ」で使っています)。
　しかし、かなり高速に動作(「クレイジークライマー」でついに60fpsを達成!)するため、
  今のところこれで行こうと思います。これから、もっと汎用性のある解読法が必要にな
  るでしょうが、それはそのときに考えようと思います。

- struct MachineDriverとmame.cで、マルチCPUをサポートするための変更(まだサポート
  されているわけではありません - これはまず第一歩です)。